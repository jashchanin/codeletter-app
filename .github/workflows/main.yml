name: Django CI 

on:
  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: marceli
      POSTGRES_DB: blog
      POSTGRES_PORT: 5432
      POSTGRES_HOST: 127.0.0.1
    services:
      postgres_main:
        image: postgres:14.5
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5   
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10.7
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - name: Install Dependencies and Virtual Environment
      run: |
        pip3 install -r requirements.txt
        python -m pip install --upgrade pip 
        python3 -m venv env
        source env/bin/activate
        cd local/
    - name: Coverage report
      env:
        DEBUG: "0"
        DB_NAME: ${{ env.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: ${{ env.POSTGRES_HOST }}
        DB_DATABASE: ${{ env.POSTGRES_DB }}
        DB_PORT: ${{ env.POSTGRES_PORT }}
      run: |
        pip install coverage
        coverage run --source='.' manage.py test blog
        coverage report
    - name: Django test
      env:
        DEBUG: "0"
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DB_NAME: ${{ env.POSTGRES_USER }}
        DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: ${{ env.POSTGRES_HOST }}
        DB_DATABASE: ${{ env.POSTGRES_DB }}
        DB_PORT: ${{ env.POSTGRES_PORT }}
      run: |
        python3 manage.py test
